/*----- PROTECTED REGION ID(Standa8smc4usb.cpp) ENABLED START -----*/
static const char *RcsId = "$Id:  $";
//=============================================================================
//
// file :        Standa8smc4usb.cpp
//
// description : C++ source for the Standa8smc4usb class and its commands.
//               The class is derived from Device. It represents the
//               CORBA servant object which will be accessed from the
//               network. All commands which can be executed on the
//               Standa8smc4usb are implemented in this file.
//
// project :     Standa8smc4usb
//
// This file is part of Tango device class.
// 
// Tango is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Tango is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with Tango.  If not, see <http://www.gnu.org/licenses/>.
// 
// $Author:  $
//
// $Revision:  $
// $Date:  $
//
// $HeadURL:  $
//
//=============================================================================
//                This file is generated by POGO
//        (Program Obviously used to Generate tango Object)
//=============================================================================


#include <ximc.h>
#include "Standa8smc4usb.h"
#include "Standa8smc4usbClass.h"


static_assert(
	sizeof(int) == sizeof(Tango::DevLong) &&
	alignof(int) == alignof(Tango::DevLong) &&
	sizeof(unsigned int) == sizeof(Tango::DevULong) &&
	alignof(unsigned int) == alignof(Tango::DevULong),
	"Current version works only on platforms where int/uint are the same as Tango::DevLong/DevULong"
);

//result_t ximc_get_status(device_t id, status_calb_t *status, calibration_t *calibration) {
//	return get_status_calb(id, status, calibration);
//}


/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb.cpp

/**
 *  Standa8smc4usb class description:
 *    
 */

//================================================================
//  The following table gives the correspondence
//  between command and method names.
//
//  Command name  |  Method name
//================================================================
//  State         |  Inherited (no method)
//  Status        |  Inherited (no method)
//  Left          |  left
//  Right         |  right
//  Stop          |  stop
//  Sstop         |  sstop
//  Move          |  move
//  Mover         |  mover
//  Home          |  home
//================================================================

//================================================================
//  Attributes managed are:
//================================================================
//  speed               |  Tango::DevFloat	Scalar
//  accel               |  Tango::DevFloat	Scalar
//  decel               |  Tango::DevFloat	Scalar
//  antiplaySpeed       |  Tango::DevFloat	Scalar
//  moveSts             |  Tango::DevULong	Scalar
//  mvCmdSts            |  Tango::DevULong	Scalar
//  pwrSts              |  Tango::DevULong	Scalar
//  encSts              |  Tango::DevULong	Scalar
//  windSts             |  Tango::DevULong	Scalar
//  curPosition         |  Tango::DevFloat	Scalar
//  encPosition         |  Tango::DevLong64	Scalar
//  curSpeed            |  Tango::DevFloat	Scalar
//  ipwr                |  Tango::DevLong	Scalar
//  upwr                |  Tango::DevLong	Scalar
//  iusb                |  Tango::DevLong	Scalar
//  uusb                |  Tango::DevLong	Scalar
//  curT                |  Tango::DevLong	Scalar
//  flags               |  Tango::DevULong	Scalar
//  gpioFlags           |  Tango::DevULong	Scalar
//  cmdBufFreeSpace     |  Tango::DevULong	Scalar
//  windingVoltageA     |  Tango::DevLong	Scalar
//  windingVoltageB     |  Tango::DevLong	Scalar
//  windingVoltageC     |  Tango::DevLong	Scalar
//  windingCurrentA     |  Tango::DevLong	Scalar
//  windingCurrentB     |  Tango::DevLong	Scalar
//  windingCurrentC     |  Tango::DevLong	Scalar
//  pot                 |  Tango::DevULong	Scalar
//  joy                 |  Tango::DevULong	Scalar
//  dutyCycle           |  Tango::DevLong	Scalar
//  manufacturer        |  Tango::DevString	Scalar
//  manufacturerId      |  Tango::DevString	Scalar
//  ProductDescription  |  Tango::DevString	Scalar
//  major               |  Tango::DevULong	Scalar
//  minor               |  Tango::DevULong	Scalar
//  release             |  Tango::DevULong	Scalar
//  serialNumber        |  Tango::DevULong	Scalar
//================================================================

namespace Standa8smc4usb_ns
{
/*----- PROTECTED REGION ID(Standa8smc4usb::namespace_starting) ENABLED START -----*/

//	static initializations

/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::namespace_starting

//--------------------------------------------------------
/**
 *	Method      : Standa8smc4usb::Standa8smc4usb()
 *	Description : Constructors for a Tango device
 *                implementing the classStanda8smc4usb
 */
//--------------------------------------------------------
Standa8smc4usb::Standa8smc4usb(Tango::DeviceClass *cl, string &s)
 : TANGO_BASE_CLASS(cl, s.c_str())
{
	/*----- PROTECTED REGION ID(Standa8smc4usb::constructor_1) ENABLED START -----*/
	init_device();

	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::constructor_1
}
//--------------------------------------------------------
Standa8smc4usb::Standa8smc4usb(Tango::DeviceClass *cl, const char *s)
 : TANGO_BASE_CLASS(cl, s)
{
	/*----- PROTECTED REGION ID(Standa8smc4usb::constructor_2) ENABLED START -----*/
	init_device();

	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::constructor_2
}
//--------------------------------------------------------
Standa8smc4usb::Standa8smc4usb(Tango::DeviceClass *cl, const char *s, const char *d)
 : TANGO_BASE_CLASS(cl, s, d)
{
	/*----- PROTECTED REGION ID(Standa8smc4usb::constructor_3) ENABLED START -----*/
	init_device();

	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::constructor_3
}

//--------------------------------------------------------
/**
 *	Method      : Standa8smc4usb::delete_device()
 *	Description : will be called at device destruction or at init command
 */
//--------------------------------------------------------
void Standa8smc4usb::delete_device()
{
	DEBUG_STREAM << "Standa8smc4usb::delete_device() " << device_name << endl;
	/*----- PROTECTED REGION ID(Standa8smc4usb::delete_device) ENABLED START -----*/

	//	Delete device allocated objects
	CORBA::string_free(this->manufacturer);
	CORBA::string_free(this->manufacturer_id);
	CORBA::string_free(this->product_description);

	close_device(&this->device);
	this->set_state(Tango::OFF);

	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::delete_device
}

//--------------------------------------------------------
/**
 *	Method      : Standa8smc4usb::init_device()
 *	Description : will be called at device initialization.
 */
//--------------------------------------------------------
void Standa8smc4usb::init_device()
{
	DEBUG_STREAM << "Standa8smc4usb::init_device() create device " << device_name << endl;
	/*----- PROTECTED REGION ID(Standa8smc4usb::init_device_before) ENABLED START -----*/
	//	Initialization before get_device_property() call
//	this->get_logger()->set_level(600);

	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::init_device_before
	

	//	Get the device properties from database
	get_device_property();
	

	/*----- PROTECTED REGION ID(Standa8smc4usb::init_device) ENABLED START -----*/

	//	Initialize device
	std::stringstream stream;
	stream << std::uppercase << std::hex << serialNumber;
	std::string serial(stream.str());
	std::string path("xi-com:///dev/ximc/00000000");
	assert(serial.length() <= 8);
	path.replace(path.end()-serial.length(), path.end(), serial);

	this->device = open_device(path.data());
//	this->device = open_device("xi-emu:///tmp/test.bin");

	// Initialize static data
//	unsigned int serial_number;
	device_information_t device_information;

//	get_serial_number(this->device, &serial_number);
	get_device_information(this->device, &device_information);
	get_engine_settings(this->device, &this->engine_settings);

	// TODO: periodically update MicrostepMode to keep them in sync
	this->calb.A = this->calibrationRatio;
	this->calb.MicrostepMode = this->engine_settings.MicrostepMode;

	this->manufacturer = CORBA::string_dup(device_information.Manufacturer);
	this->manufacturer_id = CORBA::string_dup(device_information.ManufacturerId);
	this->product_description = CORBA::string_dup(device_information.ProductDescription);
	this->major = device_information.Major;
	this->minor = device_information.Minor;
	this->release = device_information.Release;

	this->set_state(this->device == device_undefined ? Tango::FAULT : Tango::ON);

	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::init_device
}

//--------------------------------------------------------
/**
 *	Method      : Standa8smc4usb::get_device_property()
 *	Description : Read database to initialize property data members.
 */
//--------------------------------------------------------
void Standa8smc4usb::get_device_property()
{
	/*----- PROTECTED REGION ID(Standa8smc4usb::get_device_property_before) ENABLED START -----*/
	
	//	Initialize property data members
	
	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::get_device_property_before


	//	Read device properties from database.
	Tango::DbData	dev_prop;
	dev_prop.push_back(Tango::DbDatum("SerialNumber"));
	dev_prop.push_back(Tango::DbDatum("CalibrationRatio"));
	dev_prop.push_back(Tango::DbDatum("CalibrationUnits"));

	//	is there at least one property to be read ?
	if (dev_prop.size()>0)
	{
		//	Call database and extract values
		if (Tango::Util::instance()->_UseDb==true)
			get_db_device()->get_property(dev_prop);
	
		//	get instance on Standa8smc4usbClass to get class property
		Tango::DbDatum	def_prop, cl_prop;
		Standa8smc4usbClass	*ds_class =
			(static_cast<Standa8smc4usbClass *>(get_device_class()));
		int	i = -1;

		//	Try to initialize SerialNumber from class property
		cl_prop = ds_class->get_class_property(dev_prop[++i].name);
		if (cl_prop.is_empty()==false)	cl_prop  >>  serialNumber;
		else {
			//	Try to initialize SerialNumber from default device value
			def_prop = ds_class->get_default_device_property(dev_prop[i].name);
			if (def_prop.is_empty()==false)	def_prop  >>  serialNumber;
		}
		//	And try to extract SerialNumber value from database
		if (dev_prop[i].is_empty()==false)	dev_prop[i]  >>  serialNumber;

		//	Try to initialize CalibrationRatio from class property
		cl_prop = ds_class->get_class_property(dev_prop[++i].name);
		if (cl_prop.is_empty()==false)	cl_prop  >>  calibrationRatio;
		else {
			//	Try to initialize CalibrationRatio from default device value
			def_prop = ds_class->get_default_device_property(dev_prop[i].name);
			if (def_prop.is_empty()==false)	def_prop  >>  calibrationRatio;
		}
		//	And try to extract CalibrationRatio value from database
		if (dev_prop[i].is_empty()==false)	dev_prop[i]  >>  calibrationRatio;

		//	Try to initialize CalibrationUnits from class property
		cl_prop = ds_class->get_class_property(dev_prop[++i].name);
		if (cl_prop.is_empty()==false)	cl_prop  >>  calibrationUnits;
		else {
			//	Try to initialize CalibrationUnits from default device value
			def_prop = ds_class->get_default_device_property(dev_prop[i].name);
			if (def_prop.is_empty()==false)	def_prop  >>  calibrationUnits;
		}
		//	And try to extract CalibrationUnits value from database
		if (dev_prop[i].is_empty()==false)	dev_prop[i]  >>  calibrationUnits;

	}

	/*----- PROTECTED REGION ID(Standa8smc4usb::get_device_property_after) ENABLED START -----*/
	
	//	Check device property data members init
	
	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::get_device_property_after
}

//--------------------------------------------------------
/**
 *	Method      : Standa8smc4usb::always_executed_hook()
 *	Description : method always executed before any command is executed
 */
//--------------------------------------------------------
void Standa8smc4usb::always_executed_hook()
{
	INFO_STREAM << "Standa8smc4usb::always_executed_hook()  " << device_name << endl;
	/*----- PROTECTED REGION ID(Standa8smc4usb::always_executed_hook) ENABLED START -----*/

	//	code always executed before all requests
	result_t results [] = {
		get_move_settings_calb(this->device, &this->move_settings, &this->calb),
		get_chart_data(this->device, &this->chart_data),
		get_status_calb(this->device, &this->status, &this->calb),
	};

	for(result_t r: results) {
		if(r == result_error) {
			this->set_state(Tango::FAULT);
			this->set_status("Result error");
			return;
		} else if(r == result_nodevice) {
			this->set_state(Tango::FAULT);
			this->set_status("Result nodevice");
			return;
		} else if(r == result_value_error) {
			this->set_state(Tango::FAULT);
			this->set_status("Result value error");
			return;
		} else if(r == result_not_implemented) {
			this->set_state(Tango::FAULT);
			this->set_status("Result not implemented");
			return;
		}
	}

	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::always_executed_hook
}

//--------------------------------------------------------
/**
 *	Method      : Standa8smc4usb::read_attr_hardware()
 *	Description : Hardware acquisition for attributes
 */
//--------------------------------------------------------
void Standa8smc4usb::read_attr_hardware(TANGO_UNUSED(vector<long> &attr_list))
{
	DEBUG_STREAM << "Standa8smc4usb::read_attr_hardware(vector<long> &attr_list) entering... " << endl;
	/*----- PROTECTED REGION ID(Standa8smc4usb::read_attr_hardware) ENABLED START -----*/

	//	Add your own code

	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::read_attr_hardware
}
//--------------------------------------------------------
/**
 *	Method      : Standa8smc4usb::write_attr_hardware()
 *	Description : Hardware writing for attributes
 */
//--------------------------------------------------------
void Standa8smc4usb::write_attr_hardware(TANGO_UNUSED(vector<long> &attr_list))
{
	DEBUG_STREAM << "Standa8smc4usb::write_attr_hardware(vector<long> &attr_list) entering... " << endl;
	/*----- PROTECTED REGION ID(Standa8smc4usb::write_attr_hardware) ENABLED START -----*/

	//	Add your own code

	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::write_attr_hardware
}

//--------------------------------------------------------
/**
 *	Read attribute speed related method
 *	Description: 
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void Standa8smc4usb::read_speed(Tango::Attribute &attr)
{
	DEBUG_STREAM << "Standa8smc4usb::read_speed(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(Standa8smc4usb::read_speed) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(&this->move_settings.Speed);

	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::read_speed
}
//--------------------------------------------------------
/**
 *	Write attribute speed related method
 *	Description: 
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void Standa8smc4usb::write_speed(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "Standa8smc4usb::write_speed(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevFloat	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(Standa8smc4usb::write_speed) ENABLED START -----*/

	//	Retrieve write value

//	get_move_settings(this->device, &this->move_settings);
	this->move_settings.Speed = w_val;
	set_move_settings_calb(this->device, &this->move_settings, &this->calb);

	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::write_speed
}
//--------------------------------------------------------
/**
 *	Read attribute accel related method
 *	Description: 
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void Standa8smc4usb::read_accel(Tango::Attribute &attr)
{
	DEBUG_STREAM << "Standa8smc4usb::read_accel(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(Standa8smc4usb::read_accel) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(&this->move_settings.Accel);

	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::read_accel
}
//--------------------------------------------------------
/**
 *	Write attribute accel related method
 *	Description: 
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void Standa8smc4usb::write_accel(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "Standa8smc4usb::write_accel(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevFloat	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(Standa8smc4usb::write_accel) ENABLED START -----*/

	//	Retrieve write value

	this->move_settings.Accel = w_val;
	set_move_settings_calb(this->device, &this->move_settings, &this->calb);

	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::write_accel
}
//--------------------------------------------------------
/**
 *	Read attribute decel related method
 *	Description: 
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void Standa8smc4usb::read_decel(Tango::Attribute &attr)
{
	DEBUG_STREAM << "Standa8smc4usb::read_decel(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(Standa8smc4usb::read_decel) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(&this->move_settings.Decel);

	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::read_decel
}
//--------------------------------------------------------
/**
 *	Write attribute decel related method
 *	Description: 
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void Standa8smc4usb::write_decel(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "Standa8smc4usb::write_decel(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevFloat	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(Standa8smc4usb::write_decel) ENABLED START -----*/

	//	Retrieve write value

	this->move_settings.Decel = w_val;
	set_move_settings_calb(this->device, &this->move_settings, &this->calb);

	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::write_decel
}
//--------------------------------------------------------
/**
 *	Read attribute antiplaySpeed related method
 *	Description: 
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void Standa8smc4usb::read_antiplaySpeed(Tango::Attribute &attr)
{
	DEBUG_STREAM << "Standa8smc4usb::read_antiplaySpeed(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(Standa8smc4usb::read_antiplaySpeed) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(&this->move_settings.AntiplaySpeed);

	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::read_antiplaySpeed
}
//--------------------------------------------------------
/**
 *	Write attribute antiplaySpeed related method
 *	Description: 
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void Standa8smc4usb::write_antiplaySpeed(Tango::WAttribute &attr)
{
	DEBUG_STREAM << "Standa8smc4usb::write_antiplaySpeed(Tango::WAttribute &attr) entering... " << endl;
	//	Retrieve write value
	Tango::DevFloat	w_val;
	attr.get_write_value(w_val);
	/*----- PROTECTED REGION ID(Standa8smc4usb::write_antiplaySpeed) ENABLED START -----*/

	//	Retrieve write value

	this->move_settings.AntiplaySpeed = w_val;
	set_move_settings_calb(this->device, &this->move_settings, &this->calb);

	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::write_antiplaySpeed
}
//--------------------------------------------------------
/**
 *	Read attribute moveSts related method
 *	Description: 
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void Standa8smc4usb::read_moveSts(Tango::Attribute &attr)
{
	DEBUG_STREAM << "Standa8smc4usb::read_moveSts(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(Standa8smc4usb::read_moveSts) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(reinterpret_cast<Tango::DevULong *>(&this->status.MoveSts));

	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::read_moveSts
}
//--------------------------------------------------------
/**
 *	Read attribute mvCmdSts related method
 *	Description: 
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void Standa8smc4usb::read_mvCmdSts(Tango::Attribute &attr)
{
	DEBUG_STREAM << "Standa8smc4usb::read_mvCmdSts(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(Standa8smc4usb::read_mvCmdSts) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(reinterpret_cast<Tango::DevULong *>(&this->status.MvCmdSts));

	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::read_mvCmdSts
}
//--------------------------------------------------------
/**
 *	Read attribute pwrSts related method
 *	Description: 
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void Standa8smc4usb::read_pwrSts(Tango::Attribute &attr)
{
	DEBUG_STREAM << "Standa8smc4usb::read_pwrSts(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(Standa8smc4usb::read_pwrSts) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(reinterpret_cast<Tango::DevULong *>(&this->status.PWRSts));

	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::read_pwrSts
}
//--------------------------------------------------------
/**
 *	Read attribute encSts related method
 *	Description: 
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void Standa8smc4usb::read_encSts(Tango::Attribute &attr)
{
	DEBUG_STREAM << "Standa8smc4usb::read_encSts(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(Standa8smc4usb::read_encSts) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(reinterpret_cast<Tango::DevULong *>(&this->status.EncSts));

	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::read_encSts
}
//--------------------------------------------------------
/**
 *	Read attribute windSts related method
 *	Description: 
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void Standa8smc4usb::read_windSts(Tango::Attribute &attr)
{
	DEBUG_STREAM << "Standa8smc4usb::read_windSts(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(Standa8smc4usb::read_windSts) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(reinterpret_cast<Tango::DevULong *>(&this->status.WindSts));

	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::read_windSts
}
//--------------------------------------------------------
/**
 *	Read attribute curPosition related method
 *	Description: 
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void Standa8smc4usb::read_curPosition(Tango::Attribute &attr)
{
	DEBUG_STREAM << "Standa8smc4usb::read_curPosition(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(Standa8smc4usb::read_curPosition) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(&this->status.CurPosition);

	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::read_curPosition
}
//--------------------------------------------------------
/**
 *	Read attribute encPosition related method
 *	Description: 
 *
 *	Data type:	Tango::DevLong64
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void Standa8smc4usb::read_encPosition(Tango::Attribute &attr)
{
	DEBUG_STREAM << "Standa8smc4usb::read_encPosition(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(Standa8smc4usb::read_encPosition) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(&this->status.EncPosition);

	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::read_encPosition
}
//--------------------------------------------------------
/**
 *	Read attribute curSpeed related method
 *	Description: 
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void Standa8smc4usb::read_curSpeed(Tango::Attribute &attr)
{
	DEBUG_STREAM << "Standa8smc4usb::read_curSpeed(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(Standa8smc4usb::read_curSpeed) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(&this->status.CurSpeed);

	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::read_curSpeed
}
//--------------------------------------------------------
/**
 *	Read attribute ipwr related method
 *	Description: 
 *
 *	Data type:	Tango::DevLong
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void Standa8smc4usb::read_ipwr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "Standa8smc4usb::read_ipwr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(Standa8smc4usb::read_ipwr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(reinterpret_cast<Tango::DevLong *>(&this->status.Ipwr));

	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::read_ipwr
}
//--------------------------------------------------------
/**
 *	Read attribute upwr related method
 *	Description: 
 *
 *	Data type:	Tango::DevLong
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void Standa8smc4usb::read_upwr(Tango::Attribute &attr)
{
	DEBUG_STREAM << "Standa8smc4usb::read_upwr(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(Standa8smc4usb::read_upwr) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(reinterpret_cast<Tango::DevLong *>(&this->status.Upwr));

	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::read_upwr
}
//--------------------------------------------------------
/**
 *	Read attribute iusb related method
 *	Description: 
 *
 *	Data type:	Tango::DevLong
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void Standa8smc4usb::read_iusb(Tango::Attribute &attr)
{
	DEBUG_STREAM << "Standa8smc4usb::read_iusb(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(Standa8smc4usb::read_iusb) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(reinterpret_cast<Tango::DevLong *>(&this->status.Iusb));

	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::read_iusb
}
//--------------------------------------------------------
/**
 *	Read attribute uusb related method
 *	Description: 
 *
 *	Data type:	Tango::DevLong
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void Standa8smc4usb::read_uusb(Tango::Attribute &attr)
{
	DEBUG_STREAM << "Standa8smc4usb::read_uusb(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(Standa8smc4usb::read_uusb) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(reinterpret_cast<Tango::DevLong *>(&this->status.Uusb));

	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::read_uusb
}
//--------------------------------------------------------
/**
 *	Read attribute curT related method
 *	Description: 
 *
 *	Data type:	Tango::DevLong
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void Standa8smc4usb::read_curT(Tango::Attribute &attr)
{
	DEBUG_STREAM << "Standa8smc4usb::read_curT(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(Standa8smc4usb::read_curT) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(reinterpret_cast<Tango::DevLong *>(&this->status.CurT));

	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::read_curT
}
//--------------------------------------------------------
/**
 *	Read attribute flags related method
 *	Description: 
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void Standa8smc4usb::read_flags(Tango::Attribute &attr)
{
	DEBUG_STREAM << "Standa8smc4usb::read_flags(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(Standa8smc4usb::read_flags) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(reinterpret_cast<Tango::DevULong *>(&this->status.Flags));

	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::read_flags
}
//--------------------------------------------------------
/**
 *	Read attribute gpioFlags related method
 *	Description: 
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void Standa8smc4usb::read_gpioFlags(Tango::Attribute &attr)
{
	DEBUG_STREAM << "Standa8smc4usb::read_gpioFlags(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(Standa8smc4usb::read_gpioFlags) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(reinterpret_cast<Tango::DevULong *>(&this->status.GPIOFlags));

	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::read_gpioFlags
}
//--------------------------------------------------------
/**
 *	Read attribute cmdBufFreeSpace related method
 *	Description: 
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void Standa8smc4usb::read_cmdBufFreeSpace(Tango::Attribute &attr)
{
	DEBUG_STREAM << "Standa8smc4usb::read_cmdBufFreeSpace(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(Standa8smc4usb::read_cmdBufFreeSpace) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(reinterpret_cast<Tango::DevULong *>(&this->status.CmdBufFreeSpace));

	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::read_cmdBufFreeSpace
}
//--------------------------------------------------------
/**
 *	Read attribute windingVoltageA related method
 *	Description: 
 *
 *	Data type:	Tango::DevLong
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void Standa8smc4usb::read_windingVoltageA(Tango::Attribute &attr)
{
	DEBUG_STREAM << "Standa8smc4usb::read_windingVoltageA(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(Standa8smc4usb::read_windingVoltageA) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(reinterpret_cast<Tango::DevLong *>(&this->chart_data.WindingVoltageA));

	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::read_windingVoltageA
}
//--------------------------------------------------------
/**
 *	Read attribute windingVoltageB related method
 *	Description: 
 *
 *	Data type:	Tango::DevLong
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void Standa8smc4usb::read_windingVoltageB(Tango::Attribute &attr)
{
	DEBUG_STREAM << "Standa8smc4usb::read_windingVoltageB(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(Standa8smc4usb::read_windingVoltageB) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(reinterpret_cast<Tango::DevLong *>(&this->chart_data.WindingVoltageB));

	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::read_windingVoltageB
}
//--------------------------------------------------------
/**
 *	Read attribute windingVoltageC related method
 *	Description: 
 *
 *	Data type:	Tango::DevLong
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void Standa8smc4usb::read_windingVoltageC(Tango::Attribute &attr)
{
	DEBUG_STREAM << "Standa8smc4usb::read_windingVoltageC(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(Standa8smc4usb::read_windingVoltageC) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(reinterpret_cast<Tango::DevLong *>(&this->chart_data.WindingVoltageC));

	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::read_windingVoltageC
}
//--------------------------------------------------------
/**
 *	Read attribute windingCurrentA related method
 *	Description: 
 *
 *	Data type:	Tango::DevLong
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void Standa8smc4usb::read_windingCurrentA(Tango::Attribute &attr)
{
	DEBUG_STREAM << "Standa8smc4usb::read_windingCurrentA(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(Standa8smc4usb::read_windingCurrentA) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(reinterpret_cast<Tango::DevLong *>(&this->chart_data.WindingCurrentA));

	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::read_windingCurrentA
}
//--------------------------------------------------------
/**
 *	Read attribute windingCurrentB related method
 *	Description: 
 *
 *	Data type:	Tango::DevLong
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void Standa8smc4usb::read_windingCurrentB(Tango::Attribute &attr)
{
	DEBUG_STREAM << "Standa8smc4usb::read_windingCurrentB(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(Standa8smc4usb::read_windingCurrentB) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(reinterpret_cast<Tango::DevLong *>(&this->chart_data.WindingCurrentB));

	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::read_windingCurrentB
}
//--------------------------------------------------------
/**
 *	Read attribute windingCurrentC related method
 *	Description: 
 *
 *	Data type:	Tango::DevLong
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void Standa8smc4usb::read_windingCurrentC(Tango::Attribute &attr)
{
	DEBUG_STREAM << "Standa8smc4usb::read_windingCurrentC(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(Standa8smc4usb::read_windingCurrentC) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(reinterpret_cast<Tango::DevLong *>(&this->chart_data.WindingCurrentC));

	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::read_windingCurrentC
}
//--------------------------------------------------------
/**
 *	Read attribute pot related method
 *	Description: 
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void Standa8smc4usb::read_pot(Tango::Attribute &attr)
{
	DEBUG_STREAM << "Standa8smc4usb::read_pot(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(Standa8smc4usb::read_pot) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(reinterpret_cast<Tango::DevULong *>(&this->chart_data.Pot));

	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::read_pot
}
//--------------------------------------------------------
/**
 *	Read attribute joy related method
 *	Description: 
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void Standa8smc4usb::read_joy(Tango::Attribute &attr)
{
	DEBUG_STREAM << "Standa8smc4usb::read_joy(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(Standa8smc4usb::read_joy) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(reinterpret_cast<Tango::DevULong *>(&this->chart_data.Joy));

	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::read_joy
}
//--------------------------------------------------------
/**
 *	Read attribute dutyCycle related method
 *	Description: 
 *
 *	Data type:	Tango::DevLong
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void Standa8smc4usb::read_dutyCycle(Tango::Attribute &attr)
{
	DEBUG_STREAM << "Standa8smc4usb::read_dutyCycle(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(Standa8smc4usb::read_dutyCycle) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(reinterpret_cast<Tango::DevLong *>(&this->chart_data.DutyCycle));

	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::read_dutyCycle
}
//--------------------------------------------------------
/**
 *	Read attribute manufacturer related method
 *	Description: 
 *
 *	Data type:	Tango::DevString
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void Standa8smc4usb::read_manufacturer(Tango::Attribute &attr)
{
	DEBUG_STREAM << "Standa8smc4usb::read_manufacturer(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(Standa8smc4usb::read_manufacturer) ENABLED START -----*/
	//	Set the attribute value
//	auto manufacturer = CORBA::string_dup(this->device_information.Manufacturer);
	attr.set_value(&this->manufacturer);

	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::read_manufacturer
}
//--------------------------------------------------------
/**
 *	Read attribute manufacturerId related method
 *	Description: 
 *
 *	Data type:	Tango::DevString
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void Standa8smc4usb::read_manufacturerId(Tango::Attribute &attr)
{
	DEBUG_STREAM << "Standa8smc4usb::read_manufacturerId(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(Standa8smc4usb::read_manufacturerId) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(&this->manufacturer_id);

	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::read_manufacturerId
}
//--------------------------------------------------------
/**
 *	Read attribute ProductDescription related method
 *	Description: 
 *
 *	Data type:	Tango::DevString
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void Standa8smc4usb::read_ProductDescription(Tango::Attribute &attr)
{
	DEBUG_STREAM << "Standa8smc4usb::read_ProductDescription(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(Standa8smc4usb::read_ProductDescription) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(&this->product_description);

	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::read_ProductDescription
}
//--------------------------------------------------------
/**
 *	Read attribute major related method
 *	Description: 
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void Standa8smc4usb::read_major(Tango::Attribute &attr)
{
	DEBUG_STREAM << "Standa8smc4usb::read_major(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(Standa8smc4usb::read_major) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(&this->major);

	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::read_major
}
//--------------------------------------------------------
/**
 *	Read attribute minor related method
 *	Description: 
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void Standa8smc4usb::read_minor(Tango::Attribute &attr)
{
	DEBUG_STREAM << "Standa8smc4usb::read_minor(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(Standa8smc4usb::read_minor) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(&this->minor);

	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::read_minor
}
//--------------------------------------------------------
/**
 *	Read attribute release related method
 *	Description: 
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void Standa8smc4usb::read_release(Tango::Attribute &attr)
{
	DEBUG_STREAM << "Standa8smc4usb::read_release(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(Standa8smc4usb::read_release) ENABLED START -----*/
	//	Set the attribute value
	attr.set_value(&this->release);

	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::read_release
}
//--------------------------------------------------------
/**
 *	Read attribute serialNumber related method
 *	Description: 
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
//--------------------------------------------------------
void Standa8smc4usb::read_serialNumber(Tango::Attribute &attr)
{
	DEBUG_STREAM << "Standa8smc4usb::read_serialNumber(Tango::Attribute &attr) entering... " << endl;
	/*----- PROTECTED REGION ID(Standa8smc4usb::read_serialNumber) ENABLED START -----*/
	//	Set the attribute value

	attr.set_value(&this->serialNumber);

	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::read_serialNumber
}

//--------------------------------------------------------
/**
 *	Method      : Standa8smc4usb::add_dynamic_attributes()
 *	Description : Create the dynamic attributes if any
 *                for specified device.
 */
//--------------------------------------------------------
void Standa8smc4usb::add_dynamic_attributes()
{
	/*----- PROTECTED REGION ID(Standa8smc4usb::add_dynamic_attributes) ENABLED START -----*/

	//	Add your own code to create and add dynamic attributes if any

	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::add_dynamic_attributes
}

//--------------------------------------------------------
/**
 *	Command Left related method
 *	Description: 
 *
 */
//--------------------------------------------------------
void Standa8smc4usb::left()
{
	DEBUG_STREAM << "Standa8smc4usb::Left()  - " << device_name << endl;
	/*----- PROTECTED REGION ID(Standa8smc4usb::left) ENABLED START -----*/
	//	Add your own code
	command_left(this->device);
	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::left
}
//--------------------------------------------------------
/**
 *	Command Right related method
 *	Description: 
 *
 */
//--------------------------------------------------------
void Standa8smc4usb::right()
{
	DEBUG_STREAM << "Standa8smc4usb::Right()  - " << device_name << endl;
	/*----- PROTECTED REGION ID(Standa8smc4usb::right) ENABLED START -----*/
	//	Add your own code
	command_right(this->device);
	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::right
}
//--------------------------------------------------------
/**
 *	Command Stop related method
 *	Description: 
 *
 */
//--------------------------------------------------------
void Standa8smc4usb::stop()
{
	DEBUG_STREAM << "Standa8smc4usb::Stop()  - " << device_name << endl;
	/*----- PROTECTED REGION ID(Standa8smc4usb::stop) ENABLED START -----*/
	//	Add your own code
	command_stop(this->device);
	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::stop
}
//--------------------------------------------------------
/**
 *	Command Sstop related method
 *	Description: 
 *
 */
//--------------------------------------------------------
void Standa8smc4usb::sstop()
{
	DEBUG_STREAM << "Standa8smc4usb::Sstop()  - " << device_name << endl;
	/*----- PROTECTED REGION ID(Standa8smc4usb::sstop) ENABLED START -----*/
	//	Add your own code
	command_sstp(this->device);
	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::sstop
}
//--------------------------------------------------------
/**
 *	Command Move related method
 *	Description: 
 *
 *	@param argin 
 */
//--------------------------------------------------------
void Standa8smc4usb::move(Tango::DevFloat argin)
{
	DEBUG_STREAM << "Standa8smc4usb::Move()  - " << device_name << endl;
	/*----- PROTECTED REGION ID(Standa8smc4usb::move) ENABLED START -----*/
	//	Add your own code
	command_move_calb(this->device, argin, &this->calb);
	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::move
}
//--------------------------------------------------------
/**
 *	Command Mover related method
 *	Description: 
 *
 *	@param argin 
 */
//--------------------------------------------------------
void Standa8smc4usb::mover(Tango::DevFloat argin)
{
	DEBUG_STREAM << "Standa8smc4usb::Mover()  - " << device_name << endl;
	/*----- PROTECTED REGION ID(Standa8smc4usb::mover) ENABLED START -----*/
	//	Add your own code
	command_movr_calb(this->device, argin, &this->calb);
	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::mover
}
//--------------------------------------------------------
/**
 *	Command Home related method
 *	Description: 
 *
 */
//--------------------------------------------------------
void Standa8smc4usb::home()
{
	DEBUG_STREAM << "Standa8smc4usb::Home()  - " << device_name << endl;
	/*----- PROTECTED REGION ID(Standa8smc4usb::home) ENABLED START -----*/
	//	Add your own code
	command_home(this->device);
	/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::home
}

/*----- PROTECTED REGION ID(Standa8smc4usb::namespace_ending) ENABLED START -----*/

//	Additional Methods
// //--------------------------------------------------------
// /**
//  *	Read attribute uAntiplaySpeed related method
//  *	Description: 
//  *
//  *	Data type:	Tango::DevULong
//  *	Attr type:	Scalar
//  */
// //--------------------------------------------------------
// void Standa8smc4usb::read_uAntiplaySpeed(Tango::Attribute &attr)
// {
// 	DEBUG_STREAM << "Standa8smc4usb::read_uAntiplaySpeed(Tango::Attribute &attr) entering... " << endl;
// 	//	Set the attribute value
// 	attr.set_value(reinterpret_cast<Tango::DevULong *>(&this->move_settings.uAntiplaySpeed));
// }

// //--------------------------------------------------------
// /**
//  *	Write attribute uAntiplaySpeed related method
//  *	Description: 
//  *
//  *	Data type:	Tango::DevULong
//  *	Attr type:	Scalar
//  */
// //--------------------------------------------------------
// void Standa8smc4usb::write_uAntiplaySpeed(Tango::WAttribute &attr)
// {
// 	DEBUG_STREAM << "Standa8smc4usb::write_uAntiplaySpeed(Tango::WAttribute &attr) entering... " << endl;
// 	//	Retrieve write value
// 	Tango::DevULong	w_val;
// 	attr.get_write_value(w_val);
// 	//	Retrieve write value
// 	this->move_settings.uAntiplaySpeed = static_cast<unsigned int>(w_val);
// 	set_move_settings(this->device, &this->move_settings);
// }

// //--------------------------------------------------------
// /**
//  *	Read attribute uCurPosition related method
//  *	Description: 
//  *
//  *	Data type:	Tango::DevLong
//  *	Attr type:	Scalar
//  */
// //--------------------------------------------------------
// void Standa8smc4usb::read_uCurPosition(Tango::Attribute &attr)
// {
// 	DEBUG_STREAM << "Standa8smc4usb::read_uCurPosition(Tango::Attribute &attr) entering... " << endl;
// 	//	Set the attribute value
// 	attr.set_value(reinterpret_cast<Tango::DevLong *>(&this->status.uCurPosition));
// }

// //--------------------------------------------------------
// /**
//  *	Read attribute uCurSpeed related method
//  *	Description: 
//  *
//  *	Data type:	Tango::DevLong
//  *	Attr type:	Scalar
//  */
// //--------------------------------------------------------
// void Standa8smc4usb::read_uCurSpeed(Tango::Attribute &attr)
// {
// 	DEBUG_STREAM << "Standa8smc4usb::read_uCurSpeed(Tango::Attribute &attr) entering... " << endl;
// 	//	Set the attribute value
// 	attr.set_value(reinterpret_cast<Tango::DevLong *>(&this->status.uCurSpeed));
// }

// //--------------------------------------------------------
// /**
//  *	Read attribute uSpeed related method
//  *	Description: 
//  *
//  *	Data type:	Tango::DevULong
//  *	Attr type:	Scalar
//  */
// //--------------------------------------------------------
// void Standa8smc4usb::read_uSpeed(Tango::Attribute &attr)
// {
// 	DEBUG_STREAM << "Standa8smc4usb::read_uSpeed(Tango::Attribute &attr) entering... " << endl;
// 	//	Set the attribute value
// 	attr.set_value(reinterpret_cast<Tango::DevULong *>(&this->move_settings.uSpeed));
// }

// //--------------------------------------------------------
// /**
//  *	Write attribute uSpeed related method
//  *	Description: 
//  *
//  *	Data type:	Tango::DevULong
//  *	Attr type:	Scalar
//  */
// //--------------------------------------------------------
// void Standa8smc4usb::write_uSpeed(Tango::WAttribute &attr)
// {
// 	DEBUG_STREAM << "Standa8smc4usb::write_uSpeed(Tango::WAttribute &attr) entering... " << endl;
// 	//	Retrieve write value
// 	Tango::DevULong	w_val;
// 	attr.get_write_value(w_val);
// 	//	Retrieve write value
// //	get_move_settings(this->device, &this->move_settings);
// 	this->move_settings.uSpeed = static_cast<unsigned int>(w_val);
// 	set_move_settings(this->device, &this->move_settings);
// }


/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::namespace_ending
} //	namespace
