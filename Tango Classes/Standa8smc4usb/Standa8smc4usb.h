/*----- PROTECTED REGION ID(Standa8smc4usb.h) ENABLED START -----*/
//=============================================================================
//
// file :        Standa8smc4usb.h
//
// description : Include file for the Standa8smc4usb class
//
// project :     Standa8smc4usb
//
// This file is part of Tango device class.
// 
// Tango is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// Tango is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with Tango.  If not, see <http://www.gnu.org/licenses/>.
// 
// $Author:  $
//
// $Revision:  $
// $Date:  $
//
// $HeadURL:  $
//
//=============================================================================
//                This file is generated by POGO
//        (Program Obviously used to Generate tango Object)
//=============================================================================


#ifndef Standa8smc4usb_H
#define Standa8smc4usb_H

#include <tango.h>
#include <ximc.h>


/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb.h

/**
 *  Standa8smc4usb class description:
 *    
 */

namespace Standa8smc4usb_ns
{
/*----- PROTECTED REGION ID(Standa8smc4usb::Additional Class Declarations) ENABLED START -----*/

//	Additional Class Declarations

/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::Additional Class Declarations

class Standa8smc4usb : public TANGO_BASE_CLASS
{

/*----- PROTECTED REGION ID(Standa8smc4usb::Data Members) ENABLED START -----*/

//	Add your own data members
private:
	device_t device;
	move_settings_calb_t move_settings;
	status_calb_t status;
	chart_data_t chart_data;

//	device_information_t device_information;
	engine_settings_t engine_settings;

	calibration_t calb;

	Tango::DevString manufacturer;
	Tango::DevString manufacturer_id;
	Tango::DevString product_description;
	Tango::DevULong major;
	Tango::DevULong minor;
	Tango::DevULong release;
//	device_information_t device_information;
//	unsigned int serial_number;

/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::Data Members

//	Device property data members
public:
	//	SerialNumber:	
	Tango::DevULong	serialNumber;
	//	CalibrationRatio:	
	Tango::DevDouble	calibrationRatio;
	//	CalibrationUnits:	
	string	calibrationUnits;

//	Attribute data members
public:

//	Constructors and destructors
public:
	/**
	 * Constructs a newly device object.
	 *
	 *	@param cl	Class.
	 *	@param s 	Device Name
	 */
	Standa8smc4usb(Tango::DeviceClass *cl,string &s);
	/**
	 * Constructs a newly device object.
	 *
	 *	@param cl	Class.
	 *	@param s 	Device Name
	 */
	Standa8smc4usb(Tango::DeviceClass *cl,const char *s);
	/**
	 * Constructs a newly device object.
	 *
	 *	@param cl	Class.
	 *	@param s 	Device name
	 *	@param d	Device description.
	 */
	Standa8smc4usb(Tango::DeviceClass *cl,const char *s,const char *d);
	/**
	 * The device object destructor.
	 */	
	~Standa8smc4usb() {delete_device();};


//	Miscellaneous methods
public:
	/*
	 *	will be called at device destruction or at init command.
	 */
	void delete_device();
	/*
	 *	Initialize the device
	 */
	virtual void init_device();
	/*
	 *	Read the device properties from database
	 */
	void get_device_property();
	/*
	 *	Always executed method before execution command method.
	 */
	virtual void always_executed_hook();


//	Attribute methods
public:
	//--------------------------------------------------------
	/*
	 *	Method      : Standa8smc4usb::read_attr_hardware()
	 *	Description : Hardware acquisition for attributes.
	 */
	//--------------------------------------------------------
	virtual void read_attr_hardware(vector<long> &attr_list);
	//--------------------------------------------------------
	/*
	 *	Method      : Standa8smc4usb::write_attr_hardware()
	 *	Description : Hardware writing for attributes.
	 */
	//--------------------------------------------------------
	virtual void write_attr_hardware(vector<long> &attr_list);

/**
 *	Attribute speed related methods
 *	Description: 
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
	virtual void read_speed(Tango::Attribute &attr);
	virtual void write_speed(Tango::WAttribute &attr);
	virtual bool is_speed_allowed(Tango::AttReqType type);
/**
 *	Attribute accel related methods
 *	Description: 
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
	virtual void read_accel(Tango::Attribute &attr);
	virtual void write_accel(Tango::WAttribute &attr);
	virtual bool is_accel_allowed(Tango::AttReqType type);
/**
 *	Attribute decel related methods
 *	Description: 
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
	virtual void read_decel(Tango::Attribute &attr);
	virtual void write_decel(Tango::WAttribute &attr);
	virtual bool is_decel_allowed(Tango::AttReqType type);
/**
 *	Attribute antiplaySpeed related methods
 *	Description: 
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
	virtual void read_antiplaySpeed(Tango::Attribute &attr);
	virtual void write_antiplaySpeed(Tango::WAttribute &attr);
	virtual bool is_antiplaySpeed_allowed(Tango::AttReqType type);
/**
 *	Attribute moveSts related methods
 *	Description: 
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
	virtual void read_moveSts(Tango::Attribute &attr);
	virtual bool is_moveSts_allowed(Tango::AttReqType type);
/**
 *	Attribute mvCmdSts related methods
 *	Description: 
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
	virtual void read_mvCmdSts(Tango::Attribute &attr);
	virtual bool is_mvCmdSts_allowed(Tango::AttReqType type);
/**
 *	Attribute pwrSts related methods
 *	Description: 
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
	virtual void read_pwrSts(Tango::Attribute &attr);
	virtual bool is_pwrSts_allowed(Tango::AttReqType type);
/**
 *	Attribute encSts related methods
 *	Description: 
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
	virtual void read_encSts(Tango::Attribute &attr);
	virtual bool is_encSts_allowed(Tango::AttReqType type);
/**
 *	Attribute windSts related methods
 *	Description: 
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
	virtual void read_windSts(Tango::Attribute &attr);
	virtual bool is_windSts_allowed(Tango::AttReqType type);
/**
 *	Attribute curPosition related methods
 *	Description: 
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
	virtual void read_curPosition(Tango::Attribute &attr);
	virtual bool is_curPosition_allowed(Tango::AttReqType type);
/**
 *	Attribute encPosition related methods
 *	Description: 
 *
 *	Data type:	Tango::DevLong64
 *	Attr type:	Scalar
 */
	virtual void read_encPosition(Tango::Attribute &attr);
	virtual bool is_encPosition_allowed(Tango::AttReqType type);
/**
 *	Attribute curSpeed related methods
 *	Description: 
 *
 *	Data type:	Tango::DevFloat
 *	Attr type:	Scalar
 */
	virtual void read_curSpeed(Tango::Attribute &attr);
	virtual bool is_curSpeed_allowed(Tango::AttReqType type);
/**
 *	Attribute ipwr related methods
 *	Description: 
 *
 *	Data type:	Tango::DevLong
 *	Attr type:	Scalar
 */
	virtual void read_ipwr(Tango::Attribute &attr);
	virtual bool is_ipwr_allowed(Tango::AttReqType type);
/**
 *	Attribute upwr related methods
 *	Description: 
 *
 *	Data type:	Tango::DevLong
 *	Attr type:	Scalar
 */
	virtual void read_upwr(Tango::Attribute &attr);
	virtual bool is_upwr_allowed(Tango::AttReqType type);
/**
 *	Attribute iusb related methods
 *	Description: 
 *
 *	Data type:	Tango::DevLong
 *	Attr type:	Scalar
 */
	virtual void read_iusb(Tango::Attribute &attr);
	virtual bool is_iusb_allowed(Tango::AttReqType type);
/**
 *	Attribute uusb related methods
 *	Description: 
 *
 *	Data type:	Tango::DevLong
 *	Attr type:	Scalar
 */
	virtual void read_uusb(Tango::Attribute &attr);
	virtual bool is_uusb_allowed(Tango::AttReqType type);
/**
 *	Attribute curT related methods
 *	Description: 
 *
 *	Data type:	Tango::DevLong
 *	Attr type:	Scalar
 */
	virtual void read_curT(Tango::Attribute &attr);
	virtual bool is_curT_allowed(Tango::AttReqType type);
/**
 *	Attribute flags related methods
 *	Description: 
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
	virtual void read_flags(Tango::Attribute &attr);
	virtual bool is_flags_allowed(Tango::AttReqType type);
/**
 *	Attribute gpioFlags related methods
 *	Description: 
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
	virtual void read_gpioFlags(Tango::Attribute &attr);
	virtual bool is_gpioFlags_allowed(Tango::AttReqType type);
/**
 *	Attribute cmdBufFreeSpace related methods
 *	Description: 
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
	virtual void read_cmdBufFreeSpace(Tango::Attribute &attr);
	virtual bool is_cmdBufFreeSpace_allowed(Tango::AttReqType type);
/**
 *	Attribute windingVoltageA related methods
 *	Description: 
 *
 *	Data type:	Tango::DevLong
 *	Attr type:	Scalar
 */
	virtual void read_windingVoltageA(Tango::Attribute &attr);
	virtual bool is_windingVoltageA_allowed(Tango::AttReqType type);
/**
 *	Attribute windingVoltageB related methods
 *	Description: 
 *
 *	Data type:	Tango::DevLong
 *	Attr type:	Scalar
 */
	virtual void read_windingVoltageB(Tango::Attribute &attr);
	virtual bool is_windingVoltageB_allowed(Tango::AttReqType type);
/**
 *	Attribute windingVoltageC related methods
 *	Description: 
 *
 *	Data type:	Tango::DevLong
 *	Attr type:	Scalar
 */
	virtual void read_windingVoltageC(Tango::Attribute &attr);
	virtual bool is_windingVoltageC_allowed(Tango::AttReqType type);
/**
 *	Attribute windingCurrentA related methods
 *	Description: 
 *
 *	Data type:	Tango::DevLong
 *	Attr type:	Scalar
 */
	virtual void read_windingCurrentA(Tango::Attribute &attr);
	virtual bool is_windingCurrentA_allowed(Tango::AttReqType type);
/**
 *	Attribute windingCurrentB related methods
 *	Description: 
 *
 *	Data type:	Tango::DevLong
 *	Attr type:	Scalar
 */
	virtual void read_windingCurrentB(Tango::Attribute &attr);
	virtual bool is_windingCurrentB_allowed(Tango::AttReqType type);
/**
 *	Attribute windingCurrentC related methods
 *	Description: 
 *
 *	Data type:	Tango::DevLong
 *	Attr type:	Scalar
 */
	virtual void read_windingCurrentC(Tango::Attribute &attr);
	virtual bool is_windingCurrentC_allowed(Tango::AttReqType type);
/**
 *	Attribute pot related methods
 *	Description: 
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
	virtual void read_pot(Tango::Attribute &attr);
	virtual bool is_pot_allowed(Tango::AttReqType type);
/**
 *	Attribute joy related methods
 *	Description: 
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
	virtual void read_joy(Tango::Attribute &attr);
	virtual bool is_joy_allowed(Tango::AttReqType type);
/**
 *	Attribute dutyCycle related methods
 *	Description: 
 *
 *	Data type:	Tango::DevLong
 *	Attr type:	Scalar
 */
	virtual void read_dutyCycle(Tango::Attribute &attr);
	virtual bool is_dutyCycle_allowed(Tango::AttReqType type);
/**
 *	Attribute manufacturer related methods
 *	Description: 
 *
 *	Data type:	Tango::DevString
 *	Attr type:	Scalar
 */
	virtual void read_manufacturer(Tango::Attribute &attr);
	virtual bool is_manufacturer_allowed(Tango::AttReqType type);
/**
 *	Attribute manufacturerId related methods
 *	Description: 
 *
 *	Data type:	Tango::DevString
 *	Attr type:	Scalar
 */
	virtual void read_manufacturerId(Tango::Attribute &attr);
	virtual bool is_manufacturerId_allowed(Tango::AttReqType type);
/**
 *	Attribute ProductDescription related methods
 *	Description: 
 *
 *	Data type:	Tango::DevString
 *	Attr type:	Scalar
 */
	virtual void read_ProductDescription(Tango::Attribute &attr);
	virtual bool is_ProductDescription_allowed(Tango::AttReqType type);
/**
 *	Attribute major related methods
 *	Description: 
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
	virtual void read_major(Tango::Attribute &attr);
	virtual bool is_major_allowed(Tango::AttReqType type);
/**
 *	Attribute minor related methods
 *	Description: 
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
	virtual void read_minor(Tango::Attribute &attr);
	virtual bool is_minor_allowed(Tango::AttReqType type);
/**
 *	Attribute release related methods
 *	Description: 
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
	virtual void read_release(Tango::Attribute &attr);
	virtual bool is_release_allowed(Tango::AttReqType type);
/**
 *	Attribute serialNumber related methods
 *	Description: 
 *
 *	Data type:	Tango::DevULong
 *	Attr type:	Scalar
 */
	virtual void read_serialNumber(Tango::Attribute &attr);
	virtual bool is_serialNumber_allowed(Tango::AttReqType type);


	//--------------------------------------------------------
	/**
	 *	Method      : Standa8smc4usb::add_dynamic_attributes()
	 *	Description : Add dynamic attributes if any.
	 */
	//--------------------------------------------------------
	void add_dynamic_attributes();



//	Command related methods
public:
	/**
	 *	Command Left related method
	 *	Description: 
	 *
	 */
	virtual void left();
	virtual bool is_Left_allowed(const CORBA::Any &any);
	/**
	 *	Command Right related method
	 *	Description: 
	 *
	 */
	virtual void right();
	virtual bool is_Right_allowed(const CORBA::Any &any);
	/**
	 *	Command Stop related method
	 *	Description: 
	 *
	 */
	virtual void stop();
	virtual bool is_Stop_allowed(const CORBA::Any &any);
	/**
	 *	Command Sstop related method
	 *	Description: 
	 *
	 */
	virtual void sstop();
	virtual bool is_Sstop_allowed(const CORBA::Any &any);
	/**
	 *	Command Move related method
	 *	Description: 
	 *
	 *	@param argin 
	 */
	virtual void move(Tango::DevFloat argin);
	virtual bool is_Move_allowed(const CORBA::Any &any);
	/**
	 *	Command Mover related method
	 *	Description: 
	 *
	 *	@param argin 
	 */
	virtual void mover(Tango::DevFloat argin);
	virtual bool is_Mover_allowed(const CORBA::Any &any);
	/**
	 *	Command Home related method
	 *	Description: 
	 *
	 */
	virtual void home();
	virtual bool is_Home_allowed(const CORBA::Any &any);


/*----- PROTECTED REGION ID(Standa8smc4usb::Additional Method prototypes) ENABLED START -----*/

//	Additional Method prototypes

/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::Additional Method prototypes
};

/*----- PROTECTED REGION ID(Standa8smc4usb::Additional Classes Definitions) ENABLED START -----*/

//	Additional Classes Definitions

/*----- PROTECTED REGION END -----*/	//	Standa8smc4usb::Additional Classes Definitions

}	//	End of namespace

#endif   //	Standa8smc4usb_H
